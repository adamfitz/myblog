<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ospf basics on Networknoob</title>
    <link>//networknoob.net/tags/ospf-basics/</link>
    <description>Recent content in ospf basics on Networknoob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <copyright>Adam Fitzgerald</copyright>
    <lastBuildDate>Sun, 19 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="//networknoob.net/tags/ospf-basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshooting OSPF adjacency with Wireshark</title>
      <link>//networknoob.net/2023/03/19/tshoot_ospf_adj_nssa_wireshark/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>//networknoob.net/2023/03/19/tshoot_ospf_adj_nssa_wireshark/</guid>
      <description>Troubleshooting OSPF adjacency with Wireshark In this post I will demonstrate how to use wireshark to troubleshoot an area type mismatch. I came across this while labbing basic OSPF configuration and finding that one of the neighbour adjacencies would not form. The issue was that on router NSSA-R1 I had correctly configured area 23 nssa to enable the NSSA area, however on the adjacent router (IOS-XE-2) I had accidentally configured area 23 stub.</description>
    </item>
    
    <item>
      <title>OSPF basics - Passive Interface</title>
      <link>//networknoob.net/2023/03/11/ospf_passive_interface/</link>
      <pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>//networknoob.net/2023/03/11/ospf_passive_interface/</guid>
      <description>OSPF Basics - passive interface Using the passive interface or passive enable command in OSPF stops an adjacency forming over a specific router interface. An interface that has been set to passive still has its IP address injected into the OSPF domain and is seen as a STUB network.
This allows interface addresses to be advertised into the OSPF domain but also stops LSA generation / flooding from occurring for interfaces where an adjacency is not expected to be formed.</description>
    </item>
    
  </channel>
</rss>
